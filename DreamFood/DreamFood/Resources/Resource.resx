<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="NoInternet" xml:space="preserve">
    <value>No internet connection</value>
  </data>
  <data name="TurnOnInternet" xml:space="preserve">
    <value>Please turn on your internet connection</value>
  </data>
  <data name="Restaurants" xml:space="preserve">
    <value>Restaurants</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="ImageSource" xml:space="preserve">
    <value>Where do you take the picture?</value>
  </data>
  <data name="FromGallery" xml:space="preserve">
    <value>From gallery</value>
  </data>
  <data name="NewPicture" xml:space="preserve">
    <value>Take a new picture</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Recommendations" xml:space="preserve">
    <value>Recommendations</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="AddRecommendation" xml:space="preserve">
    <value>Add Recommendation</value>
  </data>
  <data name="ChangeImage" xml:space="preserve">
    <value>Tap to change the image</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="AddRecommendations" xml:space="preserve">
    <value>Add Recommendations</value>
  </data>
  <data name="AddRestaurant" xml:space="preserve">
    <value>Add Restaurant</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FirstNamePlaceholder" xml:space="preserve">
    <value>Enter First Name</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LastNamePlaceholder" xml:space="preserve">
    <value>Enter Last Name</value>
  </data>
  <data name="EMail" xml:space="preserve">
    <value>EMail</value>
  </data>
  <data name="EmailPlaceHolder" xml:space="preserve">
    <value>Enter Email</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="PhonePlaceHolder" xml:space="preserve">
    <value>Enter Phone Number</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordPlaceHolder" xml:space="preserve">
    <value>Enter Password</value>
  </data>
  <data name="PasswordConfirm" xml:space="preserve">
    <value>Password Confirm</value>
  </data>
  <data name="PasswordConfirmPlaceHolder" xml:space="preserve">
    <value>Enter Password Confirm </value>
  </data>
  <data name="FirstNameError" xml:space="preserve">
    <value>Please Enter Your Name</value>
  </data>
  <data name="LastNameError" xml:space="preserve">
    <value>Please Enter Your Last Name</value>
  </data>
  <data name="EMailError" xml:space="preserve">
    <value>EMail Error</value>
  </data>
  <data name="PhoneError" xml:space="preserve">
    <value>Please Enter Your Phone</value>
  </data>
  <data name="PasswordError" xml:space="preserve">
    <value>Password Error</value>
  </data>
  <data name="PasswordConfirmError" xml:space="preserve">
    <value>Error in the confirmation of the password</value>
  </data>
  <data name="PasswordsNoMatch" xml:space="preserve">
    <value>Passwords No Match</value>
  </data>
  <data name="RegisterConfirmation" xml:space="preserve">
    <value>Register Confirmation</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="WordKeyError" xml:space="preserve">
    <value>Word Key Error</value>
  </data>
  <data name="TypeRestaurantError" xml:space="preserve">
    <value>Error type of restaurant</value>
  </data>
  <data name="DistanceRestaurantError" xml:space="preserve">
    <value>Distance Error</value>
  </data>
  <data name="TypeRestaurant" xml:space="preserve">
    <value>Type of restaurant</value>
  </data>
  <data name="TypeRestaurantPlaceHolder" xml:space="preserve">
    <value>Enter type of restaurant</value>
  </data>
  <data name="DistanceRestaurant" xml:space="preserve">
    <value>Distance to restaurants</value>
  </data>
  <data name="DistanceRestaurantPlaceHolder" xml:space="preserve">
    <value>Enter Distance in km.</value>
  </data>
  <data name="WordKey" xml:space="preserve">
    <value>Word Key</value>
  </data>
  <data name="WordKeyPlaceHolder" xml:space="preserve">
    <value>Food, Dish or keyword</value>
  </data>
  <data name="EmailValidation" xml:space="preserve">
    <value>Email Validation</value>
  </data>
  <data name="PasswordValidation" xml:space="preserve">
    <value>Password Validation</value>
  </data>
  <data name="SomethingWrong" xml:space="preserve">
    <value>The email or password is incorrect</value>
  </data>
  <data name="Rememberme" xml:space="preserve">
    <value>Rememberme</value>
  </data>
  <data name="Forgot" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="RestaurantName" xml:space="preserve">
    <value>Restaurant Name</value>
  </data>
  <data name="RestaurantType" xml:space="preserve">
    <value>Restaurant Type</value>
  </data>
  <data name="RestaurantAddress" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="RestaurantPhone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="RestaurantRemarks" xml:space="preserve">
    <value>Remarks</value>
  </data>
  <data name="PlaceholderRestaurantName" xml:space="preserve">
    <value>Enter Restaurant Name</value>
  </data>
  <data name="PlaceholderRestaurantType" xml:space="preserve">
    <value>Enter Restaurant Type</value>
  </data>
  <data name="PlaceholderRestaurantAddress" xml:space="preserve">
    <value>Enter Restaurant Address</value>
  </data>
  <data name="PlaceholderRestaurantPhone" xml:space="preserve">
    <value>Enter Phone Number</value>
  </data>
  <data name="Map" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="RecomendationPlaceHolder" xml:space="preserve">
    <value>Enter Recommendation</value>
  </data>
  <data name="ValorationPlaceHolder" xml:space="preserve">
    <value>Select A Valoration</value>
  </data>
  <data name="SelectRestaurantPlaceHolder" xml:space="preserve">
    <value>Select A Restaurant</value>
  </data>
  <data name="Restaurant" xml:space="preserve">
    <value>Restaurant</value>
  </data>
  <data name="Score" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="Recommendation" xml:space="preserve">
    <value>Recommendation</value>
  </data>
  <data name="NameErrorrRecomendacion" xml:space="preserve">
    <value>Please enter the recommendation</value>
  </data>
  <data name="NameErrorRestaurant" xml:space="preserve">
    <value>Please select the name of the restaurant</value>
  </data>
  <data name="NameErrorScore" xml:space="preserve">
    <value>Please select the rating of the recommendation</value>
  </data>
  <data name="NameErrorType" xml:space="preserve">
    <value>Please enter the type of restaurant</value>
  </data>
  <data name="NameErrorPhone" xml:space="preserve">
    <value>Please enter the phone</value>
  </data>
  <data name="NameErrorAddress" xml:space="preserve">
    <value>Please enter the address</value>
  </data>
</root>